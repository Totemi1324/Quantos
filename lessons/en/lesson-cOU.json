{
    "sectiontitle-1": {
        "title": "Modelling tasks mathematically"
    },
    "paragraph-1": {
        "text": "Quantum annealers are (yet) very adapted; they can only model and solve very specific problems. The introductory lesson has already explained what these are: the QUBO problems. Accordingly, the first step in problem solving with quantum annealers is to formulate the problem as a QUBO equation, which then outputs the lowest cost when the correct solution is found."
    },
    "paragraph-2": {
        "text": "Perhaps you already recognize the correlation: In this often rather abstract step, it is helpful to look at the problem visually and **represent it as a grid**. In the case of the N queens problem, this is fortunately quite obvious: the fields of the chessboard represent the variables a, b, c, etc., on which there is either a queen (1) or not (0). If you remember the corresponding unit of the first lecture, the same approach was used there. Let's consider the simplest example of the 4 queens problem:"
    },
    "image-1": {
        "asset": "assets/images/lessons/chessboard_variables.png",
        "caption": "A 4×4 chessboard with labeled fields",
        "alttext": "A chessboard of size four by four, squares are labeled in alphabetical order from a to p."
    },
    "paragraph-3": {
        "text": "We label the squares alphabetically from a to p, which change their binary value depending on whether they are **occupied** with a queen or **not**. This is useful because now every possible position of the 4 queens on the board can be represented by a string of numbers consisting of 16 ones and zeros - in mathematical terms: a vector with 16 coordinates. This modeling technique is also called **one-hot encoding**."
    },
    "equation-1": {
        "tex": "q=\\begin{bmatrix}a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p\\end{bmatrix}",
        "alttext": "q=[a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p]"
    },
    "equation-2": {
        "tex": "\\begin{bmatrix}0&1&0&0&0&0&0&1&1&0&0&0&0&0&1&0\\end{bmatrix}\\Rightarrow",
        "alttext": "[0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0]⇒"
    },
    "image-2": {
        "asset": "assets/images/lessons/four_queens_problem.png",
        "caption": "The solution to the 4 queens problem which is represented by the vector above",
        "alttext": "A chessboard of size four by four with four queen pieces, in a constellation in which none can beat another."
    },
    "paragraph-4": {
        "text": "Now, based on the rules in chess, we can set up our rules:"
    },
    "paragraph-5": {
        "text": "1. There should be **exaclty one** queen per row\n2. There should be **exaclty one** queen per column\n3. There **does'n have to be, but should be at most one** queen per diagonal"
    },
    "paragraph-6": {
        "text": "These rules can be derived by logical reasoning: Since the chessboard is N×N in size and multiple queens must not be in the same row (since they would otherwise threaten each other), the N queens must be distributed in such a way that no row may remain empty and each contains exactly one. Same applies to the columns, since queens can also travel any distance in the vertical direction. In a 4×4 chessboard there are 5 diagonals from left to right and 5 from right to left, which would be too much for 4 queens (although a queen always is in two diagonals simultaneously). Therefore, not all of them need to be occupied, but there may still be at most one queen per diagonal because of the threatening."
    },
    "sectiontitle-2": {
        "title": "Implementing the rules"
    },
    "paragraph-7": {
        "text": "For the rows, the following QUBO form is correct:"
    },
    "image-3": {
        "asset": "assets/images/lessons/row_highlight.png",
        "caption": "QUBO equation using a row as an example",
        "alttext": "A chessboard of size four by four, the top row of squares of which is shaded blue."
    },
    "equation-3": {
        "tex": "f\\left(a,b,c,d\\right)=\\left(a+b+c+d-1\\right)^2",
        "alttext": "f(a,b,c,d)=(a+b+c+d-1)²"
    },
    "paragraph-8": {
        "text": "Squaring ensures that the **least cost** occurs only when $$a+b+c+d-1$$ equals 0, i.e., when only one out of all the fields in the row is occupied (as also shown in the introductory lecture). This is applied to all rows and added. The same for the columns:"
    },
    "image-4": {
        "asset": "assets/images/lessons/column_highlight.png",
        "caption": "QUBO equation using a column as an example",
        "alttext": "A chessboard of size four by four whose left column of squares is shaded blue."
    },
    "equation-4": {
        "tex": "f\\left(a,e,i,m\\right)=\\left(a+e+i+m-1\\right)^2",
        "alttext": "f(a,e,i,m)=(a+e+i+m-1)²"
    },
    "paragraph-9": {
        "text": "To implement the \"at most 1 occupancy\" rule for the diagonals, this time ½ is subtracted instead of 1 in the parenthesis; this shifts the minimum of the function so that 0 **or** 1 can be the sum of the fields. Multiplying this out, it can be seen that in the end, all pairwise occupancies of these fields **are subject to a penalty**. Correctness can also be checked with a so-called truth table. In total, there are $$2(2N-3)=4N-6$$ diagonals to consider in the N queens problem."
    },
    "equation-5": {
        "tex": "f\\left(a,f,k,p\\right)=\\left(a+f+k+p-\\frac{1}{2}\\right)^2",
        "alttext": "f(a,f,k,p)=(a+f+k+p-½)²"
    },
    "image-5": {
        "asset": "assets/images/lessons/diagonal_highlight.png",
        "caption": "QUBO equation using a diagonal as an example",
        "alttext": "A chessboard of size four by four with a diagonal of fields shaded in blue."
    },
    "image-6": {
        "asset": "assets/images/lessons/truth_table.png",
        "caption": "A truth table lists all possible pairs of inputs and outputs of a function. 0 and 1 occupancies give the lowest cost in this diagonal",
        "alttext": "Table with input values x in the first row and function values f in the second column; zero to zero-point-two-five, one to zero-point-two-five, two to two-point-two-five, three to six-point-two-five, four to twelve-point-two-five."
    }
}