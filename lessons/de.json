{
    "lection-8hg": {
        "title": "Quantenannealer: Eine Einführung",
        "description": "...Aber was genau sind Quantencomputer? Wie funktionieren sie? Auf diese Fragen und mehr gibt diese Einführungslektion eine Antwort!",
        "content": {
            "lesson-S6N": {
                "title": "Was ist ein Qubit?",
                "content": {
                    "paragraph-1": {
                        "text": "Quantencomputer werden in der Berichterstattung vieler Medien immer präsenter — und die Behauptungen, sie wären in ihrer Rechenleistung klassischen Computern weit überlegen, würden diese bald ersetzen und sichere Verschlüsselungsmethoden der Gegenwart brechen. Aber wie viel davon ist wahr — und wie viel pure Übertreibung? Das Ziel dieses Kurses ist es, einen tiefen Einblick in das spannende Feld der Quanteninformatik zu geben, weshalb wir uns bedanken möchten, dass du Quantos nutzt! Auf dich wartet eine spaßige Lernerfahrung, nach dessen du eigene Rechenprobleme auf echten Quantencomputern lösen kannst."
                    },
                    "sectiontitle-1": {
                        "title": "Ein paar Grundlagen"
                    },
                    "paragraph-2": {
                        "text": "Dafür müssen wir aber bei den Grundlagen anfangen: Das **Qubit**, eine Mischung aus 'Quanten' und 'Bit' und das Herzstück dieser neuen Technologie, ist für die enorme Rechenleistung verantwortlich. Ein normaler Computer, so wie du ihn gerade wahrscheinlich in der Hand oder auf dem Tisch hast, arbeitet mit Bits, um Informationen zu speichern und zu berechnen. Diese sind binär — das bedeutet, sie sind entweder 1 oder 0. Das ist eigentlich nur eine mathematische Repräsentation, denn Bits sind meist Leiterbahnen aus Kupfer, in denen entweder Strom fließt (Zustand 1) oder nicht (Zustand 0). Das Besondere an Qubits: Sie können beide Zustände gleichzeitig bzw. eine Mischung davon annehmen."
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/qubit_visualization.png",
                        "caption": "So kann man sich Qubits ungefähr vorstellen: Eine Überlagerung von mehreren Zuständen",
                        "alttext": "Die Ziffern 0 und 1 in Kreisen, daneben ein Kreis mit 0 und 1 übereinandergelegt."
                    },
                    "paragraph-3": {
                        "text": "Doch wie ist das möglich? Vielleicht kennst du das Gedankenexperiment vom Physiker Erwin Schrödinger: In einer Kiste befindet sich eine Katze, welche durch ein Gift getötet wird, sobald ein instabiler Atomkern zerfällt; wann das passiert, kann man nicht genau vorhersagen. Bis zu dem Zeitpunkt, wo man in die Kiste hineinblickt, ist das Atom zerfallen und nicht zerfallen zugleich — und die Katze somit lebendig und tot zugleich."
                    },
                    "paragraph-4": {
                        "text": "Die kleinste Welt der Atome, der Quanten, benimmt sich völlig anders, als was wir mit bloßem Auge wahrnehmen können und die Gesetze der klassischen Physik gelten dort nicht. Daher hat sie ihren eigenen Zweig bekommen: Die Quantenphysik. Sie ganz zu verstehen, ist selbst für gelernte Physiker eine Schwierigkeit, die grundlegenden Modelle aber können von allen nachvollzogen werden. Die Quantenphysik geht davon aus, dass quantenmechanische Systeme — also Atome, Elektronen usw. — eine Überlagerung aller ihrer möglichen Zustände besitzen, die **Superposition**. Erst wenn man sie mit Geräten misst oder anderweitig beobachtet, entscheiden sie sich für einen bestimmten Zustand. Dies kombiniert mit der Erkenntnis, dass der nicht jeder Ausgang einer Messung gleich wahrscheinlich ist und durch eine Wellenfunktion beschrieben wird, wird als Kopenhagener Deutung bezeichnet."
                    },
                    "interactive-1": {

                    },
                    "paragraph-5": {
                        "text": "Dieses Verhalten kann man sich zunutze machen, um Qubits zu bauen — Einheiten, die eine Überlagerung von 0 und 1 darstellen, bis sie gemessen werden. Qubits können mit jedem atomaren System, welches mindestens zwei verschiedene Zustände besitzt, realisiert werden. Hier einige Beispiele:"
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/electron_spin_example.png",
                        "caption": "Up- und Down-Spins von Elektronen könnten als Qubits dienen",
                        "alttext": "Zwei schematische Darstellungen von Elektronen, bei dem der eine Pfeil nach oben (Schriftzug up) und der andere nach unten (Schriftzug down) zeigt."
                    },
                    "image-3": {
                        "asset": "assets/images/lessons/ion_example.png",
                        "caption": "Genauso wie verschiedenen Energieniveaus von Ionen, die durch Elektronen auf verschiedenen Bahnen entstehen",
                        "alttext": "Zwei schematische Darstellungen von Atomen, bei dem sich das eine Elektron auf der näheren (Zustand 0) und das andere auf der ferneren Bahn (Zustand 1) befindet."
                    },
                    "image-4": {
                        "asset": "assets/images/lessons/superconductor_example.png",
                        "caption": "Schleifen aus supraleitenden Materialien, die zwei Zustände annehmen können",
                        "alttext": "Ein Ring aus leitendem Material, in dessen Mitte ein Pfeil nach oben und ein Pfeil nach unten zeigt."
                    },
                    "paragraph-6": {
                        "text": "Dabei ist ein Qubit (in der Mathematik meist mit $$\\Psi$$ darsgestellt) immer eine Mischung aus $$\\vert 0\\rangle$$ (aus) und $$\\vert 1\\rangle$$ (ein). Welcher Anteil des jeweiligen Zustands vorhanden ist, wird durch zwei Zahlen $$\\alpha$$ und $$\\beta$$ ausgedrückt, die zusammen immer 1 ergeben."
                    },
                    "equation-1": {
                        "tex": "\\vert\\Psi\\rangle = \\alpha \\times \\vert 0\\rangle + \\beta \\times \\vert 1\\rangle",
                        "alttext": "|Ψ⟩ = α × |0⟩ + β × |1⟩"
                    },
                    "paragraph-7": {
                        "text": "Das Qubit $$0.3\\vert 0\\rangle + 0.7\\vert 1\\rangle$$ zum Beispiel wird nach der Messung mit einer Wahrscheinlichkeit von 30% zu 0 und von 70% zu 1 (wobei das stark vereinfacht ist, denn in Wirklichkeit stammen diese Wahrscheinlichkeiten aus dem Zahlenraum der komplexen Zahlen). Das können wir auch geometrisch visualisieren: Wenn man Alpha und Beta mit einem mehrstufigen mathematischen Verfahren zu Winkel umrechnet, liegt der Zustand eines Qubits immer auf einer Kugel mit dem Radius 1. Die Superposition ist erreicht, wenn sich der Zustand genau in der Mitte zwischen den zwei Polen befindet."
                    },
                    "image-5": {
                        "asset": "assets/images/lessons/bloch_sphere.png",
                        "caption": "Darstellung eines Qubits auf der sogenannten Bloch-Kugel",
                        "alttext": "Kugel in einem Koordinatensystem, am Südpol 1, am Nordpol 0; Qubit ist als Punkt auf der Oberfläche der oberen Halbkugel eingezeichnet und dessen Winkel zu den Achsen markiert."
                    },
                    "image-6": {
                        "asset": "assets/images/lessons/bloch_sphere_superposition.png",
                        "caption": "So sieht ein Qubit mathematisch betrachtet aus, wenn er sich in Superposition befindet",
                        "alttext": "Kugel in einem Koordinatensystem, am Südpol 1, am Nordpol 0; Qubit ist als Punkt genau auf dem Äquator liegend eingezeichnet."
                    },
                    "paragraph-8": {
                        "text": "Die gegen die Intuition gehende Quantenmechanik zu begreifen ist etwas herausfordernd; nimm dir ruhig Zeit und geh zurück, wenn du etwas nicht verstanden hast. Alles klar? Dann geht es weiter zur nächsten Einheit! Am Ende jeder Einheit findest du einen Knopf zum Abschließen. Viel Spaß!"
                    }
                }
            },
            "lesson-75N": {
                "title": "Das Innenleben von Quantenannealern",
                "content": {
                    "sectiontitle-1": {
                        "title": "Der Blick hinter die Kulissen"
                    },
                    "paragraph-1": {
                        "text": "**Quantenannealer** — ein auf den ersten Blick nicht vielsagender Begriff. Tatsächlich ist es aber Gegenstand eine der aktuellsten Forschungen der Gegenwart. Damit ist eine spezielle Art von Quantencomputern gemeint, die dieser Kurs behandelt. Im Gegensatz zu gatterbasierten Quantencomputern sind sie bereits weit fortgeschritten und können tatsächlich benutzt werden, um anwendungsbezogene Probleme zu lösen. \"Annealing\" bedeutet so viel wie \"Abkühlung\"; was es damit auf sich hat, wird in Einheit 3 gezeigt. Und so sehen sie aus:"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/dwave_advantage.png",
                        "caption": "Der Advantage-Annealer von DWave Systems, zum Vergleich eine erwachsene Person im Maßstab",
                        "alttext": "Schwarzes Metallgehäuse mit orangenen Leuchtakzenten, daneben ein Strichmännchen auf etwa halber Höhe."
                    },
                    "paragraph-2": {
                        "text": "Ein großer, schwarzer Kasten, fast 3 Meter hoch und 3,8 Tonnen schwer, mit einem Kostenpunkt von ca. 15 Millionen Dollar. Sie hat also (noch) nicht die Dimensionen eines Heimcomputers, sondern ist vielmehr für Rechenzentren und Unternehmen gedacht. Bedient wird der DWave Advantage über einen — vergleichsweise — kleinen Monitor mit Tastatur an der Seite des Gehäuses."
                    },
                    "paragraph-3": {
                        "text": "Doch wozu die viele, große Technik? Damit die Qubits im Annealer richtig funktionieren können — also dass die vorhin erklärte Superposition stabil bleibt und die Messungen durch Störungen nicht verfälscht werden — muss das Innere des Gehäuses auf eine Temperatur von **16 mK** (Millikelvin) gekühlt werden; das entspricht ungefähr -273,13° Celsius, was nahe dem absoluten Nullpunkt ist, dem physikalisch höchstem möglichen Maß an Kälte überhaupt. Dies ist für Ingenieure eine riesige Herausforderung: Einiges an Elektronik und dicke Wände aus Stahl, in dessen Inneren ein Vakuum, also ein luftleerer Raum, herrschen muss, sind nötig, um die Qubits vor aller möglichen Interferenz durch andere Teilchen zu schützen. Das Gehäuse selbst beherbergt ein umgekehrtes, pyramidenähnliches Gestell:"
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/annealer_insides.png",
                        "caption": "Quantenannealer beherbergen ein sog. Mischungskryostat, dessen Stufen immer kühler werden, je weiter unten sie sich befinden",
                        "alttext": "Kupferfarbenes zylindrisches Metallgestell aus mehreren Stufen, welches an einer Decke befestigt und dicht vertrahtet ist."
                    },
                    "image-3": {
                        "asset": "assets/images/lessons/qpu.png",
                        "caption": "Mit diesem QPU-Chip führt der Annealer Rechenoperationen aus",
                        "alttext": "Rautenförmiger Silikonchip befestigt an einer kupfernen Stange und einer Leiterplatte mit vielen hervorstehenden Kabeln."
                    },
                    "paragraph-4": {
                        "text": "Die **QPU** (Quantum Processing Unit, also \"Quantenverarbeitungseinheit\"), das Gegenstück zum klassischen CPU, steht dabei an der Spitze und ist das Herz des Quantenannealers; ein wenige Quadratzentimeter großer Chip, auf dessen Oberfläche sich die Qubits befinden. Das aktuellste Modell vom Hersteller DWave, der \"Advantage\", besitzt 5627 davon. Zum Vergleich: Die gebräuchlichsten CPUs in heutigen Heim-PCs und Smartphones besitzen zwischen 100 Millionen und 3 Billionen Transistoren, sprich individuell ein- und ausschaltbare Einheiten."
                    },
                    "sectiontitle-2": {
                        "title": "Die Muster auf einer QPU"
                    },
                    "paragraph-5": {
                        "text": "Die Qubits auf einer QPU sind in einer Art Muster, der sogenannten **Topologie**, angeordnet und sind untereinander durch **Koppler** verbunden. Die folgende schematische Zeichnung zeigt zwei Beispiele: Die Topologie des \"Advantage\"-Vorgängermodells heißt \"Chimera-Graph\", die des \"Advantage\"-s \"Pegasus-Graph\":"
                    },
                    "image-4": {
                        "asset": "assets/images/lessons/topologies.png",
                        "caption": "Die Diagramme der (a) Chimera-Architektur des D-Wave 2000Q und der neueren (b) Pegasus-Architektur",
                        "alttext": "Kreise verbunden durch Linien, die eine regelmäßige Anordnung zeigen, daneben die gleiche Struktur als Teil eines dichteren Netzes von Kreisen."
                    },
                    "image-5": {
                        "asset": "assets/images/lessons/topology_legend.png",
                        "caption": "Die Linien im Diagramm stellen die Koppler, die Kreise die Qubits dar",
                        "alttext": "Pfeile, die auf hervorgehobene Linien und Kreise des vorherigen Bildes zeigen, mit der Aufschrift Koppler und Qubit."
                    },
                    "paragraph-6": {
                        "text": "Koppler sind im realen Gerät Magnetfelder, deren Stärke individuell angepasst werden kann. Und hier kommt der wichtigste Punkt: Sie können beeinflussen, ob Qubits bei der Messung in den Zustand $$\\vert 0\\rangle$$ oder $$\\vert 1\\rangle$$ zusammenfallen, jedoch nicht mit Sicherheit garantieren. Auch können sie das Verhalten von zwei Qubits so anpassen, dass sie dazu neigen, entweder einen gleichen oder einen ungleichen Wert einnehmen. Diese Arten heißen entsprechend Gleichheits- bzw. Ungleichheitskoppler. Wenn zum Beispiel zwei Qubits mit einem Ungleichheitskoppler verbunden sind und das erste eine $$\\vert 1\\rangle$$ wird, so wird die andere mit hoher Wahrscheinlichkeit eine $$\\vert 0\\rangle$$."
                    },
                    "paragraph-7": {
                        "text": "Quantenannealer werden programmiert, Probleme zu lösen, indem die Stärke und die Art dieser Koppler angepasst werden. Ein Qubit kann allerdings nur mit einer begrenzten Anzahl von anderen Qubits gekoppelt werden; die genaue Anzahl ist abhängig von der Topologie und ist maßgeblich für die \"Rechenpower\" des Quantenannealers verantwortlich. Wie dies alles genau zusammenhängt, erklärt die nächste Einheit."
                    }
                }
            },
            "lesson-XOQ": {
                "title": "Optimierungsprobleme und Anneals",
                "content": {
                    "paragraph-1": {
                        "text": "Eine örtliche Müllabfuhr muss am Anfang jeder Woche die Bewohner einer Stadt besuchen, um ihre Müllcontainer zu leeren. Stell dir vor, du wärst dafür zuständig, die Route für die Flotte der Müllabfuhrflotte festzulegen. Wie würdest du vorgehen, um sicherzustellen, dass die Fahrzeuge möglichst schnell fertig sind, möglichst wenig Sprit verbrauchen, vielleicht dass kein Fahrzeug überlastet ist?"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/optimization_introduction.png",
                        "caption": "Der Fahrplan einer Müllabfuhr muss gut geplant sein, damit keine Ressourcen verschwendet werden",
                        "alttext": "Zwei Müllwägen fahren auf den Straßen einer Graslandschaft mit mehreren Häusern; aus der Vogelperspektive."
                    },
                    "paragraph-2": {
                        "text": "Dieses Szenario ist ein klassisches Beispiel für **Optimierungsprobleme**; sie spielen in diesem Kurs eine große Rolle, da das die eine Art von Aufgaben ist, die Quantenannealer (potenziell) schneller und effizienter lösen können als herkömmliche Computer. Je größer die Stadt ist, desto höher ist die Anzahl der theoretisch möglichen Routen für die Müllabfuhr; hier sind wir schnell bei mehreren Milliarden Möglichkeiten. Alle zu berechnen und durchzuprobieren, um die optimalste Lösung zu finden — dies wird \"brute force\" (\"rohe Kraft\") genannt — ist unmöglich, da jahrzehntelange Rechenarbeit nötig wäre."
                    },
                    "sectiontitle-1": {
                        "title": "Strategische Annäherung"
                    },
                    "paragraph-3": {
                        "text": "Es muss also eine andere Herangehensweise her. Bisher war die vorherrschende Strategie, die beste Lösung Schritt für Schritt so gut wie möglich anzunähern. Dafür ist jedoch ein objektives Maß nötig, woran man messen kann, welche Lösungen besser sind als andere. Daher besteht jedes Optimierungsproblem aus mindestens zwei Komponenten:"
                    },
                    "paragraph-4": {
                        "text": "1. Kosten: Zahlen, die bewerten, wie \"gut\" eine bestimmte Lösung für das Problem ist\n2.Kostenfunktion: Eine Gleichung, welche die Kosten für eine bestimmte Lösungskonstellation berechnet"
                    },
                    "paragraph-5": {
                        "text": "Die Komplexität der Kostenfunktion hängt von der Anzahl der zu optimierenden Parameter ab; bei einer Unbekannten kann man es sich als eine Kurve vorstellen:"
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/quadratic_qubo.png",
                        "caption": "Der tiefste Punkt (Minimum) der Kostenfunktion ist zugleich die beste Lösung des Optimierungsproblems",
                        "alttext": "Nach oben geöffnete parabelförmige Kurve im Koordinatensystem; nummerierte Lösungen x-Achse, Kosten y-Achse; tiefster Punkt markiert mit einem Pfeil und der Beschriftung Minimum."
                    },
                    "paragraph-6": {
                        "text": "Nehmen wir an, wir möchten die Anzahl der Haushalte optimieren, die die einzelnen Müllwagen anfahren. Im obigen Graphen kann man ablesen, wie sich die Kosten mit dieser Anzahl verändern. Hier gilt: Je niedriger die Kosten, desto besser eine Lösung. Laut dem Graphen wäre also die beste Lösung $$n = 3$$, da hier die geringsten Kosten entstehen. Die Kostenfunktion, die dies letztendlich festlegt, wird meist nicht aktiv definiert, sondern ergibt sich aus Kostenwerten, die einzelnen Lösungen zugewiesen werden."
                    },
                    "paragraph-7": {
                        "text": "Die Herausforderung dabei: Der Computer, der das Problem lösen soll, sieht auf dieser Kostenkurve immer nur einen Punkt auf einmal und muss eine Strategie entwickeln, trotzdem die \"Täler\", also die Lösungen mit den niedrigsten Kosten, zu finden. Es ist möglich, dabei das **globale Optimum**, die niedrigsten Kosten von allen, zu finden, aber man kann genauso gut bei einem **lokalen Optimum**, einem der vielen mitteltiefen Tälern, landen — im Glauben, der tiefste Punkt sei bereits erreicht."
                    },
                    "interactive-1": {

                    },
                    "sectiontitle-2": {
                        "title": "Mit Quantencomputern optimieren"
                    },
                    "paragraph-8": {
                        "text": "Doch wie kommt jetzt Quantencomputing ins Spiel? Durch die Fähigkeit der Qubits, sich in einer Superposition zu befinden, sehen sie (bildlich gesprochen) die ganze Kostenfunktion auf einmal und können gleich zum tiefsten Tal \"springen\". Dafür sind gleich mehrere quantenphysikalische Eigenschaften der Qubits verantwortlich: Der Grundzustand und der Quantentunneleffekt."
                    },
                    "paragraph-9": {
                        "text": "Quantenmechanische Systeme besitzen eine Art \"innere Energie\" und streben danach, dass diese **möglichst niedrig** ist. Der Zustand der geringsten Energie wird auch Grundzustand oder auch Nullpunktenergie bezeichnet."
                    },
                    "image-3": {
                        "asset": "assets/images/lessons/energy_levels.png",
                        "caption": "Verschiedene Energiestufen von Teilchen: Der Grundzustand und erregte Zustände",
                        "alttext": "Diagramm mit farbigen horizontalen Linien auf verschiedenen Höhen neben einem Pfeil als x-Achse mit der Aufschrift Energie; die tiefste Linie ist beschriftet als Grundzustand, die höher gelegenen als erregte Zustände."
                    },
                    "paragraph-10": {
                        "text": "Zusätzlich besitzen Quantenteilchen wie z.B. Elektronen die Fähigkeit, sich zu bestimmten Energieniveaus zu \"tunneln\". Da, wie in vorherigen Einheiten beschrieben, die Position und die Geschwindigkeit eines Elektrons keine festen Werte, sondern eine Wahrscheinlichkeitswolke sind, ist es den Teilchen möglich, gleich zu niedrigeren Energieniveaus zu springen, ohne vorherige, möglicherweise höhere Energiestufen durchlaufen zu haben. Dies nennt man \"quantum tunneling\", oder auch **Quantentunneleffekt**."
                    },
                    "image-4": {
                        "asset": "assets/images/lessons/quantum_tunneling.png",
                        "caption": "Anstatt den klassischen Weg zu gehen, ist es kleinsten Teilchen auch möglich, sich durchzutunneln",
                        "alttext": "Diagramm von einer Energiekurve mit einem hohen Hügel in der Mitte; Von einem Kreis, der in einem Tal vor dem Hügel mit lokales Minimum beschriftet liegt, zeigt ein Pfeil durch den Hügel in ein tieferes Tal nach dem Hügel mit globales Minimum beschriftet."
                    },
                    "image-5": {
                        "asset": "assets/images/lessons/annealing_process.png",
                        "caption": "Energieniveaus sind nicht statisch, sondern verändern sich im Laufe des Annealings",
                        "alttext": "Diagramm mit mehreren flachen Kurven, die eng beieinander verlaufen. x-Achse ist mit Kosten, y-Achse mit Zeit beschrieben. Auf die Stelle, wo der Abstand der Kurven besonders kein ist, zeigt ein Pfeil mit der Aufschrift Minimum Gap."
                    },
                    "paragraph-11": {
                        "text": "Vielleicht ahnst du schon, worauf es hinausläuft: Diese Effekte wollen Quantenannealer ausnutzen, indem man versucht, die Energiekurve der QPU (durch die Programmierung der Koppler) der vorhin behandelten Kostenkurve anzupassen, damit diese **ungefähr gleich aussehen**. Der Vorgang des \"annealings\", also des \"Abkühlens\", ist nichts anderes, als die Superposition der Qubits durch gezielte Messungen stückweise zerfallen zu lassen, damit sie den Zustand der geringsten Energie anstreben und ihre Werte so annehmen, dass sie die beste Lösung für das ursprüngliche Optimierungsproblem darstellen. Wo die Energiekurven eng zusammenlaufen, beim sogenannten \"minimum gap\", besteht die Chance, dass durch die Tunneleffekte nicht die optimalste Lösung rauskommt, deswegen führen Quantenannealer meist mehrere hundert Anneals durch und sind dabei extrem schnell, da ein Anneal nur ca. 20 Mikrosekunden (0.00002 Sekunden) dauert!"
                    }
                }
            },
            "lesson-WrU": {
                "title": "Die QUBO-Gleichung",
                "content": {
                    "sectiontitle-1": {
                        "title": "Wie Quantenannealer sprechen"
                    },
                    "paragraph-1": {
                        "text": "Angenommen, du hast ein konkretes Problem vor Augen — wie machst du es einem Quantencomputer verständlich? Nun geht es darum, Optimierungsprobleme an den Annealer zu bringen. So wie klassische Computer programmiert werden müssen, um Anweisungen in Code auszuführen, müssen auch Optimierungsprobleme in eine geeignete \"Sprache\" übersetzt werden, damit der Quantenannealer sie versteht — in diesem Fall in die Sprache der Mathematik."
                    },
                    "paragraph-2": {
                        "text": "Damit der Annealer eine Aufgabe lösen kann, muss diese als **quadratic unconstrained binary optimization problem**, oder kurz **QUBO-Problem**, formuliert werden. Dieser Name ist beim ersten Hören nicht besonders hilfreich, es handelt sich jedoch um ein Kernkonzept der Quanteninformatik. Hier also einige Erläuterungen:"
                    },
                    "paragraph-3": {
                        "text": "- **Quadratic** (quadratisch) bedeutet, dass maximal zwei Variablen miteinander multipliziert werden können.\n- **Unconstrained** (uneingeschränkt) bedeutet, dass die richtige Antwort nicht durch andere Bedingungen eingeschränkt ist.\n- **Binary** (binär) bedeutet, dass wir nur 0 oder 1 eingeben können.\n- **Optimization** (Optimierung) ist — wir erinnern uns an vorangegangene Einheiten — der Prozess, die optimale Lösung für ein komplexes Problem durch Annäherung zu finden."
                    },
                    "paragraph-4": {
                        "text": "Angemerkt sei, dass es auch andere Möglichkeiten gibt, einen Quantenannealer zu programmieren, wie z.B. Ising-Probleme, die wir der Kürze und Verständlichkeit halber auslassen werden. Jetzt aber zurück zu QUBO-Problemen; betrachten wir ein Beispiel, um das Konzept zu veranschaulichen:"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/checkers_board.png",
                        "caption": "Eine beispielhaftes Damenbrett mit Spielsteinen",
                        "alttext": "Ein illustriertes rot-schwarzes Damenbrett mit vier Feldern, beschriftet von oben links mit den Buchstaben a, b, c und d; darüber vier schwarze Spielsteine."
                    },
                    "paragraph-5": {
                        "text": "Dieses Damenbrett der Größe 2x2 hat die vier Felder a, b, c und d. Zusätzlich gibt es vier Spielsteine, von denen jeder auf ein beliebiges Feld gesetzt werden kann, aber nicht muss (jedoch nicht mehrere auf dasselbe Feld). Wenn ein Feld besetzt ist, wird es als 1 dargestellt, ansonsten als 0. Der Quantencomputer soll die Steine so platzieren, dass **möglichst viele Felder besetzt** sind. Hier kommen die Kostenfunktionen wieder zum Einsatz, um zu bewerten, wie gut eine bestimmte Lösung ist: Je niedriger die Kosten, desto besser. Die Suche nach der besten Lösung läuft somit auf die Minimierung der Kostenfunktion hinaus. Wenn wir ein QUBO-Problem haben, das vier Variablen a, b, c und d (die entweder 0 oder 1 sind) als Eingabe nimmt, ist die Kostenfunktion wie folgt definiert:"
                    },
                    "equation-1": {
                        "tex": "f\\left(a,b,c,d\\right)=h_aa+h_bb+h_cc+h_dd+h_{ab}ab+h_{ac}ac+h_{ad}ad+h_{bc}bc+h_{bd}bd+h_{cd}cd",
                        "alttext": "f(a,b,c,d)=ha×a + hb×b + hc×c + hd×d + hab×a×b + hac×a×c + had×a×d + hbc×b×c + hbd×b×d + hcd×c×d"
                    },
                    "paragraph-6": {
                        "text": "Zunächst summieren wir die Werte aller Felder, dann addieren wir das Produkt jedes möglichen Paares der Feldwerte. Die $$h$$, mit denen die Feldwerte multipliziert werden, sind einfache Koeffizienten, d.h. positive oder negative Zahlen, die steuern, wie stark wir die einzelnen Belegungen belohnen (oder bestrafen) wollen. Dies ist ein ziemlich cleveres System: Ist ein Feld unbesetzt, also 0, wird der entsprechende Koeffizient aus der Gleichung entfernt (denn eine Multiplikation mit 0 ergibt immer 0)."
                    },
                    "paragraph-7": {
                        "text": "Ähnlich verhält es sich bei den Feldpaaren: Eine Belohnung bleibt nur in der Gleichung, wenn beide Felder 1 sind (Wenn auch nur eine 0 im Produkt ist, ist das Ergebnis des Produkts 0). Da wir nach den niedrigsten Kosten suchen, bedeutet $$h < 0$$ \"Belohnung\", $$h > 0$$ \"Strafe\" und $$h = 0$$ \"irrelevant\". Ein Beispiel: Wenn Feld a unbedingt besetzt werden soll, sollte es ein h von z.B. -10 haben, oder wenn wir verhindern wollen, dass b und c gleichzeitig besetzt sind, sollte h eine hohe positive Zahl wie 25 sein."
                    },
                    "sectiontitle-2": {
                        "title": "Ein paar Beispiele"
                    },
                    "paragraph-8": {
                        "text": "Nun können wir ein QUBO-Problem für unsere ursprüngliche Aufgabe definieren: Es sollen **so viele Felder wie möglich** besetzt werden."
                    },
                    "equation-2": {
                        "tex": "f\\left(a,b,c,d\\right)=(-1)\\times a+(-1)\\times b+(-1)\\times c+(-1)\\times d=-a-b-c-d",
                        "alttext": "f(a,b,c,d)=-1×a + -1×b + -1×c + -1×d = -a-b-c-d"
                    },
                    "paragraph-9": {
                        "text": "Wir können darauf verzichten, die Werte von Feldpaaren festzulegen, da die Beziehungen zwischen Feldern für dieses Problem irrelevant sind. Dies ist eine gültige Kostenfunktion, denn die niedrigsten Kosten, nämlich -4, werden nur erreicht, wenn alle Felder 1 sind. Fügen wir die folgende Bedingung zu unserer Aufgabe hinzu: Die Felder a und b dürfen nicht gleichzeitig belegt sein."
                    },
                    "equation-3": {
                        "tex": "f\\left(a,b,c,d\\right)=-a-b-c-d+4ab",
                        "alttext": "f(a,b,c,d)=-a-b-c-d+4×a×b"
                    },
                    "paragraph-10": {
                        "text": "Wenn a und b beide 1 sind, sind die Kosten 0, auch wenn alle Felder für die maximale Belohnung besetzt sind, was bedeutet, dass die Lösung schlechter ist als alle anderen möglichen Lösungen. Die besten erreichbaren Kosten sind hier also -3, was die richtige Lösung liefert. Eine weitere praktische Strategie bei QUBO-Problemen ist das **Quadrieren**, zum Beispiel bei der Aufgabe \"Genau zwei von vier Feldern sollten besetzt sein\":"
                    },
                    "equation-4": {
                        "tex": "f\\left(a,b,c,d\\right)=\\left(a+b+c+d-2\\right)^2=a^2+2ab+2ac+2ad-4a+b^2+2bc+2bd-4b+c^2+2cd-4c+d^2-4d+4=-3a-3b-3c-3d+2ab+2ac+2ad+2bc+2bd+2cd",
                        "alttext": "f(a,b,c,d)=(a+b+c+d)²=a²+2ab+2ac+2ad-4a+b²+2bc+2bd-4b+c²+2cd-4c+d²-4d=-3a-3b-3c-3d+2ab+2ac+2ad+2bc+2bd+2cd"
                    },
                    "paragraph-11": {
                        "text": "Das funktioniert, weil bei der Summierung aller Felder und der Subtraktion von 2 das Ergebnis genau dann 0 ist, wenn genau zwei Felder 1 sind. Aber: Wenn kein Feld oder ein Feld besetzt ist, wäre das Ergebnis negativ, was ein noch besseres Ergebnis zur Folge hätte. Dies kann durch das Quadrieren der Gleichung behoben werden, denn wenn eine negative Zahl quadriert wird, ergibt sich immer ein positiver Wert. Die nachfolgende graphische Darstellung zeigt, was das Quadrieren bewirkt:"
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/quadratic_qubo.png",
                        "caption": "Durch das Quadrieren entsteht die charakteristische Parabel, die ihren Tiefpunkt bei der optimalen Lösung hat",
                        "alttext": "Nach oben geöffnete parabelförmige Kurve im Koordinatensystem; Anzahl an Belegungen x-Achse, Kosten y-Achse; tiefster Punkt markiert mit einem Pfeil und der Beschriftung Minimum."
                    },
                    "paragraph-12": {
                        "text": "Die quadrierten Variablen wie a², b² usw., die sich aus dem Ausmultiplizieren der Gleichung ergeben, wären eigentlich nicht zulässig (da sie gegen die Regeln von QUBO verstoßen), aber da im Falle von Binärzahlen $$x^2=x$$ gilt, können sie durch a, b usw. ersetzt werden. Auch Konstanten wie +4 können weggelassen werden, da sie nur alle Ergebnisse um den gleichen Betrag nach oben oder unten verschieben. Wir können überprüfen, ob unsere Kostenfunktion korrekt ist, indem wir sie mit verschiedenen Eingaben testen."
                    },
                    "equation-5": {
                        "tex": "f\\left(0, 1, 0, 0\\right)=-3",
                        "alttext": "f(0,1,0,0)=-3"
                    },
                    "equation-6": {
                        "tex": "f\\left(1, 0, 1, 0\\right)=-4",
                        "alttext": "f(1,0,1,0)=-4"
                    },
                    "equation-7": {
                        "tex": "f\\left(0, 1, 1, 1\\right)=-3",
                        "alttext": "f(0,1,1,1)=-3"
                    },
                    "equation-8": {
                        "tex": "f\\left(1, 1, 1, 1\\right)=0",
                        "alttext": "f(1,1,1,1)=0"
                    },
                    "paragraph-13": {
                        "text": "Probiere, aus fertigen QUBO-Gleichungen selbst die optimalen Belegungen herauszulesen!"
                    },
                    "interactive-1": {
                        
                    },
                    "paragraph-14": {
                        "text": "Ein Optimierungsproblem als QUBO-Problem formulieren zu können, ist die **einzige** und **wichtigste** Voraussetzung, es auf einem Quantenannealer lösen zu können. Dieser Schritt erfordert oft etwas Gedankenarbeit; wenn es aber geschafft ist, ist es die halbe Miete! Die nachfolgenden Lektionen geben genug Beispiele und Möglichkeiten, dies zu üben."
                    }
                }
            },
            "lesson-Bwk": {
                "title": "Kommunikations-Schnittstelle: (Hamilton-)Matrizen",
                "content": {
                    "paragraph-1": {
                        "text": "Jetzt fehlt nur noch ein finaler Schritt, um Optimierungsprobleme auf einem Quantenannealer zu lösen: Ihm die QUBO-Gleichung zu übermitteln. Zudem müssen die Ergebnisse, wenn der Annealer fertig ist, in irgendeiner Form wieder zurückkommen. Für diese Kommunikation gibt es ein einheitliches Protokoll, welche die Formatierung der Daten festlegt. Sie sieht ungefähr so aus:"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/dwave_procedure.png",
                        "caption": "Der Verlauf einer Rechenoperation am DWave-Annealer",
                        "alttext": "Flussdiagramm, an dessen Anfang ein quadratisches Zahlenfeld steht, welches zu einem Foto des Quantenannealers zeigt, welches wiederum auf eine Reihe aus den Ziffern 0 und 1 zeigt."
                    },
                    "paragraph-2": {
                        "text": "Das sieht vielleicht etwas verwirrend aus, gehen wir es also Schritt für Schritt durch."
                    },
                    "sectiontitle-1": {
                        "title": "Vektoren und Matrizen"
                    },
                    "paragraph-3": {
                        "text": "Doch zuerst einige Grundlagen. Für die Darstellung der Daten sind **Vektoren** von zentraler Bedeutung. In seiner traditionellen Form ist ein Vektor eine Größe im Raum mit einer **Richtung** und **Länge** (oft als Pfeil oder Strahl dargestellt) und besteht aus zwei oder mehr Koordinaten, die in einer vertikalen Spalte untereinandergeschrieben werden. Ein Vektor im 3-dimensionalen Raum würde zum Beispiel drei Koordinaten enthalten."
                    },
                    "equation-1": {
                        "tex": "\\vec{q}=\\begin{pmatrix}q_1\\\\q_2\\\\q_3\\end{pmatrix}",
                        "alttext": "q=(q₁, q₂, q₃)"
                    },
                    "image-4": {
                        "asset": "assets/images/lessons/vector_example.png",
                        "caption": "Mit Pfeilen können 3-dimensionale Vektoren visualisiert werden",
                        "alttext": "Bunter Pfeil in einem dreidimensionalen Koordinatensystem, welches vom Ursprung aus dem Bildschirm heraus zeigt."
                    },
                    "paragraph-4": {
                        "text": "Da ein Vektor im Grunde eine Zahlenreihe ist, werden Vektoren verwenden, um die Ergebnisse aus dem Quantenannealer abzurufen. Wenn wir ein 4×4-Spielbrett mit 4²=16 Feldern hätten, würden die Einträge angeben, ob unsere Felder a, b, usw. bis n besetzt (1) oder unbesetzt (0) sein sollten. Dies wird als der **Antwortvektor** $$q_A$$ definiert und ist das, was der Quantencomputer nach jedem Anneal ausgibt."
                    },
                    "equation-2": {
                        "tex": "\\vec{q}_A=\\begin{pmatrix}a\\\\b\\\\\\vdots\\\\n\\end{pmatrix}=\\begin{pmatrix}0\\\\1\\\\\\vdots\\\\1\\end{pmatrix}",
                        "alttext": "qₐ=(a, b, ..., n)=(0, 1, ..., 1)"
                    },
                    "paragraph-5": {
                        "text": "In ähnlicher Weise kann man sich eine **Matrix** als eine Reihe von zusammengeklebten Vektoren vorstellen. Es handelt sich um ein rechteckiges Feld aus Zahlen, bei dem jedes Element im Format $$m_{ij}$$ indiziert ist (i und j bezeichnen den Zeilen- und Spaltenindex eines bestimmten Elements, also in welcher Zeile und Spalte es sich in der Matrix befindet). Ein Beispiel:"
                    },
                    "equation-3": {
                        "tex": "M=\\begin{pmatrix}1&4&2&1\\\\3&0&3&1\\\\5&1&2&0\\\\4&1&2&3\\end{pmatrix}",
                        "alttext": "M=((1,4,2,1),(3,0,3,1),(5,1,2,0),(4,1,2,3))"
                    },
                    "paragraph-6": {
                        "text": "Hier wäre das Element $$m_{31}$$ der Matrix gleich 5. Keine Angst, wenn es noch nicht ganz klar ist, wir werden Matrizen nur als einfaches Mittel zum Zweck verwenden. Denn in der Tat sind Matrizen die kompakteste Möglichkeit, QUBO-Probleme als Eingabe an den Quantenannealer zu übermitteln. Da die Form der QUBO-Gleichungen immer gleich ist, können die Koeffizienten (die einzigen Werte, die sich ändern) in einer Matrix im folgenden Format zusammengefasst werden, um sie dem Quantencomputer zugänglich zu machen:"
                    },
                    "equation-4": {
                        "tex": "f\\left(a,b,c,d\\right)=h_aa+h_bb+h_cc+h_dd+h_{ab}ab+h_{ac}ac+h_{ad}ad+h_{bc}bc+h_{bd}bd+h_{cd}cd",
                        "alttext": "f(a,b,c,d)=ha×a + hb×b + hc×c + hd×d + hab×a×b + hac×a×c + had×a×d + hbc×b×c + hbd×b×d + hcd×c×d"
                    },
                    "equation-5": {
                        "tex": "\\Rightarrow H=\\begin{pmatrix}h_a&h_{ab}&h_{ac}&h_{ad}\\\\0&h_b&h_{bc}&h_{bd}\\\\0&0&h_c&h_{cd}\\\\0&0&0&h_d\\end{pmatrix}",
                        "alttext": "⇒H=((ha, hab, hac, had),(0, hb, hbc, hbd),(0, 0, hc, hcd),(0, 0, 0, hd))"
                    },
                    "paragraph-7": {
                        "text": "Beobachte das **Muster**, wie die einzelnen Felder aufeinander folgen; auf gleicher Weise skaliert der Hamiltonian auch für QUBO-Gleichungen mit mehr Variablen."
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/hamiltonian_scaling.png",
                        "caption": "Eine Hamilton-Matrix für eine QUBO-Gleichung mit 6 Unbekannten",
                        "alttext": "Quadratische Zahlenmatrix mit 6 mal 6 Einträgen, von h a bis h f durchnummeriert."
                    },
                    "image-3": {
                        "asset": "assets/images/lessons/hamiltonian_pattern.png",
                        "caption": "Hamiltonians bilden mit ihren Variablen ein regelmäßiges Muster",
                        "alttext": "Eine Anordnung von bunten bzw. zweifarbigen Quadraten in einem Gitter; oben sind a, b, c und d unterschiedliche Farben zugewiesen; im Gitter repräsentieren sie die Stellung der Variablen."
                    },
                    "sectiontitle-2": {
                        "title": "Kopplung von Qubits"
                    },
                    "paragraph-8": {
                        "text": "Zusammengefasst versucht der Quantenannealer also, den Antwortvektor zu finden, dessen Koordinaten die geringsten Kosten verursachen. Die Einträge der Hamilton-Matrix dienen dabei als Grundlage für die Gewichtung (Bias) der Koppler-Magnetfelder auf der QPU. Diese Übersetzung wird automatisch berechnet und nennt sich **Embedding**. Was ist aber, wenn das QUBO-Problem komplexer ist? Nehmen wir die Chimera-Topologie als Beispiel: Hier kann jeder Qubit mit höchstens 6 anderen gekoppelt werden, was einer maximalen Hamiltonian-Größe von 7×7 entspricht."
                    },
                    "paragraph-9": {
                        "text": "Wenn ein Qubit mehr als 6 Verbindungen braucht, können dann mehrere **physikalische** Qubits zu sogenannten **logischen** Qubits gekoppelt werden, indem sie mit sehr starken Gleichheitskopplern verbunden werden. Bei der Messung verhalten sie sich dann beinahe wie eine Einheit. Mit jedem physikalischen Qubit, der an einen logischen angeschlossen wird, kommen 6 weitere Verbindungsmöglichkeiten dazu, es erhöht sich aber auch die Wahrscheinlichkeit, dass die Kette bricht und die Ergebnisse unbrauchbar werden."
                    },
                    "interactive-1": {

                    },
                    "paragraph-10": {
                        "text": "Herzlichen Glückwunsch! Du hast nun ein fundiertes Verständnis darüber erlangt, wie Quantenannealer Aufgaben lösen. Damit kannst du bereits den **Coding-Tab** auf dem Homescreen verwenden, um mit einem echten Annealer von DWave zu interagieren. Leg direkt los oder stürze dich in die nächsten Lektionen, die dieses Grundlagenwissen anhand echter Problemstellungen anwenden und Aufschluss über eine methodische Herangehensweise sowie die Grenzen des Quantenannealing geben!"
                    }
                }
            }
        }
    },
    "lection-fC9": {
        "title": "Das N-Damen-Problem",
        "description": "Eine Frage nach optimalen Schachstellungen — für viele heutige Rechner nach wie vor komplex. Aber auch für Quantenphysik?",
        "content": {
            "lesson-uFZ": {
                "title": "Einführung zum N-Damen-Problem",
                "content": {
                    "paragraph-1": {
                        "text": "Schach zählt zu den bekanntesten und am meisten praktiziertesten Brettspielen weltweit — und entgegen seiner Schlichtheit zu den mathematisch komplexesten. Dies fängt schon dort an, dass es mehr mögliche Schachpartien gibt als Atome im beobachtbaren Universum. Zu viel also, um brute force, also einzelnes Durchprobieren anzuwenden; das schreit nach einem Optimierungsproblem!"
                    },
                    "sectiontitle-1": {
                        "title": "Was macht die Dame im Schach?"
                    },
                    "paragraph-2": {
                        "text": "Ein Schachbrett besteht aus einem Feld, welches in schwarze und weiße Quadrate aufgeteilt ist — 8 in der horizontalen und 8 in der vertikalen Seite, das macht insgesamt 64 Felder. Es gibt mehrere Schachfiguren, die sich auf diesem Brett bewegen können, für uns von Bedeutung ist hier aber nur die **Dame**, die stärkste aller Figuren. Sie kann sich in horizontaler, vertikaler und diagonaler Richtung beliebig viele Felder bewegen, um andere Figuren zu schlagen. Steht eine andere Figur also im Wirkungsbereich einer Dame, gilt sie als bedroht."
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/queen_range.png",
                        "caption": "Die Dame deckt mit ihrer Reichweite eine große Fläche auf dem Brett ab",
                        "alttext": "Schachbrett aus der Vogelperspektive mit einer Damenfigur auf D3; von ihr ausgehend eine Reihe, eine Spalte und zwei Diagonalen an Feldern blau schattiert."
                    },
                    "paragraph-3": {
                        "text": "Dies machte Max Bezzel, einen deutschen Schachmeister, nachdenklich. 1848 formulierte er in der Berliner Schachzeitung erstmals das 8-Damen-Problem. Dabei ist das Ziel, 8 Damen auf einem Schachbrett so zu platzieren, dass sie sich **nicht gegenseitig bedrohen**, also dass keine eine andere schlagen kann. Später wurde das Problem aufgeweitet und zum N-Damen-Problem verallgemeinert, wobei es N Damen auf einem Schachfeld der Größe N×N Felder bedrohungsfrei aufzustellen gilt (N ist hierbei eine beliebige ganze Zahl). Dieses Rätsel ist bis heute Gegenstand aktiver Forschung, wobei die höchste exakt gelöste Größe $$N=27$$ beträgt und über **200 Billiarden** (!) verschiedene Möglichkeiten für eine gültige Aufstellung bietet."
                    },
                    "interactive-1": {

                    },
                    "paragraph-4": {
                        "text": "Bei kleineren Schachbrettgrößen ist die Lösung noch relativ einfach per Hand möglich. Mit jeder weiteren Dame jedoch erhöht sich jedoch die Komplexität um ein Vielfaches. Können wir also den Lösungsprozess vereinfachen und neue Konstellationen innerhalb von Mikrosekunden finden? Diese Lektion zeigt, wie das N-Damen-Problem als Optimierungs- und QUBO-Problem formuliert werden kann und wie es mit einem Quantenannealer lösbar ist. Dabei wollen wir auch der Frage nachgehen, ob sich der quantenbasierte Ansatz überhaupt lohnt und wo die Grenzen dieser neuen Technologie sind."
                    }
                }
            },
            "lesson-cOU": {
                "title": "Formulierung der QUBO-Gleichung",
                "content": {
                    "sectiontitle-1": {
                        "title": "Mathematische Modellierung von Aufgaben"
                    },
                    "paragraph-1": {
                        "text": "Quantenannealer sind (noch) sehr angepasst; sie können nur ganz bestimmte Probleme modellieren und lösen. Die einführende Lektion hat bereits erläutert, welche diese sind: Die QUBO-Probleme. Der erste Schritt bei der Problemlösung mit Quantenannealern ist demnach, die Aufgabe als eine QUBO-Gleichung zu formulieren, welche dann die niedrigsten Kosten ausgibt, wenn die korrekte Lösung gefunden wurde."
                    },
                    "paragraph-2": {
                        "text": "Vielleicht erkennst du bereits die Parallele: Bei diesem oftmals eher abstrakten Schritt ist es hilfreich, die Problemstellung bildlich zu betrachten und **als ein Gitter darzustellen**. Beim N-Damen-Problem ist dies glücklicherweise ziemlich offensichtlich: Die Felder des Schachbretts sind die Variablen a, b, c usw, auf denen sich entweder eine Dame befindet (1) oder nicht (0). Wenn du dich an die entsprechende Einheit der ersten Lektion erinnerst, wurde dort der gleiche Ansatz angewandt. Betrachten wir das einfachste Beispiel des 4-Damen-Problems:"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/chessboard_variables.png",
                        "caption": "Ein 4×4-Schachbrett mit beschrifteten Feldern",
                        "alttext": "Ein Schachbrett der Größe vier mal vier, Felder sind in alphabetischer Reihenfolge von a nach p beschriftet."
                    },
                    "paragraph-3": {
                        "text": "Wir beschriften die Felder alphabetisch von a bis p, die je nach dem ihren Binärwert verändern, ob sie mit einer Dame **belegt** sind oder **nicht**. Das ist deswegen nützlich, weil nun jede mögliche Stellung der 4 Damen auf dem Brett durch eine Zahlenreihe, bestehend aus 16 Einsen und Nullen, dargestellt werden kann — mathematisch ausgedrückt: Ein Vektor mit 16 Koordinaten. Diese Modellierungstechnik wird auch **One-Hot Encoding** genannt."
                    },
                    "equation-1": {
                        "tex": "q=\\begin{bmatrix}a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p\\end{bmatrix}",
                        "alttext": "q=[a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p]"
                    },
                    "equation-2": {
                        "tex": "\\begin{bmatrix}0&1&0&0&0&0&0&1&1&0&0&0&0&0&1&0\\end{bmatrix}\\Rightarrow",
                        "alttext": "[0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0]⇒"
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/four_queens_problem.png",
                        "caption": "Die Lösung des 4-Damen-Problems, welches vom obigen Vektor dargestellt wird",
                        "alttext": "Ein Schachbrett der Größe vier mal vier mit vier Damenfiguren in einer Konstellation, dass keine eine andere schlagen kann."
                    },
                    "paragraph-4": {
                        "text": "Nun können wir, ausgehend von den Regeln im Schach, unsere Regeln festlegen:"
                    },
                    "paragraph-5": {
                        "text": "1. Pro Zeile soll **genau eine** Dame stehen\n2. Pro Spalte soll **genau eine** Dame stehen\n3. Pro Diagonale **muss keine, darf aber höchstens eine** Dame stehen"
                    },
                    "paragraph-6": {
                        "text": "Diese Regeln können durch logische Begründungen hergeleitet werden: Da das Schachfeld N×N groß ist und mehrere Damen nicht in der gleichen Zeile stehen dürfen (da sie sich sonst gegenseitig bedrohen würden), müssen die N Damen so verteilt werden, dass keine Zeile frei bleiben darf und jede genau eine beinhaltet. Ähnlich verhält es sich mit den Spalten, da Damen auch eine beliebige Distanz in vertikaler Richtung zurücklegen können. In einem 4×4-Schachbrett gibt es 5 Diagonalen von links nach rechts und 5 von rechts nach links, das wäre zu viel für 4 Damen. Daher müssen nicht alle belegt werden, pro Diagonale darf es aber aufgrund der Bedrohungslage trotzdem höchstens eine Dame geben."
                    },
                    "sectiontitle-2": {
                        "title": "Die Umsetzung der Regeln"
                    },
                    "paragraph-7": {
                        "text": "Für die Zeilen ist folgende QUBO-Form korrekt:"
                    },
                    "image-3": {
                        "asset": "assets/images/lessons/row_highlight.png",
                        "caption": "QUBO-Gleichung am Beispiel einer Zeile",
                        "alttext": "Ein Schachbrett der Größe vier mal vier, dessen oberste Reihe an Feldern blau schattiert ist."
                    },
                    "equation-3": {
                        "tex": "f\\left(a,b,c,d\\right)=\\left(a+b+c+d-1\\right)^2",
                        "alttext": "f(a,b,c,d)=(a+b+c+d-1)²"
                    },
                    "paragraph-8": {
                        "text": "Das Quadrieren sorgt dafür, dass nur dann die **geringsten Kosten** entstehen, wenn $$a+b+c+d-1$$ gleich 0 ist, d.h. wenn aus allen Feldern der Zeile nur eines belegt ist (wie auch in der Einführungslektion dargestellt). Das wird auf alle Zeilen übertragen und addiert. Für die Spalten genauso:"
                    },
                    "image-4": {
                        "asset": "assets/images/lessons/column_highlight.png",
                        "caption": "QUBO-Gleichung am Beispiel einer Spalte",
                        "alttext": "Ein Schachbrett der Größe vier mal vier, dessen linke Spalte an Feldern blau schattiert ist."
                    },
                    "equation-4": {
                        "tex": "f\\left(a,e,i,m\\right)=\\left(a+e+i+m-1\\right)^2",
                        "alttext": "f(a,e,i,m)=(a+e+i+m-1)²"
                    },
                    "paragraph-9": {
                        "text": "Um die \"höchstens 1 Belegung\"-Regel für die Diagonalen zu verwirklichen, wird dieses Mal ½ statt 1 in der Klammer subtrahiert; damit verschiebt sich das Minimum der Funktion so, dass 0 **oder** 1 die Summe der Felder sein kann. Wenn man das ausmultipliziert, ist ersichtlich, dass das im Endeffekt bedeutet, dass alle paarweise Belegungen dieser Felder **mit einer Strafe belegt** ist. Die Korrektheit kann auch mit einer sogenannten Wahrheitstabelle überprüft werden. Insgesamt gibt es beim N-Damen-Problem $$2(2N-3)=4N-6$$ Diagonalen zu berücksichtigen."
                    },
                    "equation-5": {
                        "tex": "f\\left(a,f,k,p\\right)=\\left(a+f+k+p-\\frac{1}{2}\\right)^2",
                        "alttext": "f(a,f,k,p)=(a+f+k+p-½)²"
                    },
                    "image-5": {
                        "asset": "assets/images/lessons/diagonal_highlight.png",
                        "caption": "QUBO-Gleichung am Beispiel einer Diagonale",
                        "alttext": "Ein Schachbrett der Größe vier mal vier, bei dem eine Querdiagonale an Feldern blau schattiert ist."
                    },
                    "image-6": {
                        "asset": "assets/images/lessons/truth_table.png",
                        "caption": "Eine Wahrheitstabelle listet alle möglichen Paare von Ein- und Ausgaben einer Funktion auf. 0 und 1 Belegungen ergeben in dieser Diagonalen die niedrigsten Kosten",
                        "alttext": "Tabelle mit Eingabewerten x in der ersten Zeile und Funktionswerten f in der zweiten Spalte; null zu null-komma-zwei-fünf, eins zu null-komma-zwei-fünf, zwei zu zwei-komma-zwei-fünf, drei zu sechs-komma-zwei-fünf, vier zu zwölf-komma-zwei-fünf."
                    }
                }
            },
            "lesson-t8i": {
                "title": "Von Koeffizienten zur Hamilton-Matrix",
                "content": {
                    "paragraph-1": {
                        "text": "Wenn alle Bestandteile ausgeschrieben und addiert sind (noch eine etwas mühselige Handarbeit), kann die Gleichung ausmultipliziert und somit die Quadrate aufgelöst werden, um der QUBO-Form gerecht zu werden. Das bedeutet, dass Elemente so lange **zusammengefasst und vereinfacht** werden, bis alle Regeln von QUBO erfüllt sind (die Details sind in der Einführungslektion erläutert). Das Ergebnis ist folgendes:"
                    },
                    "equation-1": {
                        "tex": "f\\left(a,...,p\\right)=-2a+2ab+2ac+2ad+2ae+2ai+2am-2b+2bc+2bd+2bf+2bj+2bn-2c+2cd+2cg+2ck+2co-2d+2dh+2dl+2dp-2e+2ef+2eg+2eh+2ei+2em-2f+2fg+2fh+2fj+2fn-2g+2gh+2gk+2go-2h+2hl+2hp-2i+2ij+2ik+2il+2im-2j+2jk+2jl+2jn-2k+2kl+2ko-2l+2lp-2m+2mn+2mo+2mp-2n+2no+2np-2o+2op-2p+2in+2ej+2eo+2jo+2af+2ak+2ap+2fk+2fp+2kp+2bg+2bl+2gl+2ch+2be+2cf+2ci+2fi+2dg+2dj+2dm+2gj+2gm+2jm+2hk+2hn+2kn+2lo+10.5",
                        "alttext": "f(a,...,p)=-2a+2ab+2ac+2ad+2ae+2ai+2am-2b+2bc+2bd+2bf+2bj+2bn-2c+2cd+2cg+2ck+2co-2d+2dh+2dl+2dp-2e+2ef+2eg+2eh+2ei+2em-2f+2fg+2fh+2fj+2fn-2g+2gh+2gk+2go-2h+2hl+2hp-2i+2ij+2ik+2il+2im-2j+2jk+2jl+2jn-2k+2kl+2ko-2l+2lp-2m+2mn+2mo+2mp-2n+2no+2np-2o+2op-2p+2in+2ej+2eo+2jo+2af+2ak+2ap+2fk+2fp+2kp+2bg+2bl+2gl+2ch+2be+2cf+2ci+2fi+2dg+2dj+2dm+2gj+2gm+2jm+2hk+2hn+2kn+2lo"
                    },
                    "paragraph-2": {
                        "text": "Eine massive, unhandliche Gleichung, jedoch eine gültige Kostenfunktion, da nur die regelkonformen Damenanordnungen die geringsten Kosten verursachen. Da die QUBO-Gleichung auf N, der Größe des Schachbretts, basiert, beansprucht sie N² logische Qubits (was bedeutet, dass die nötige Anzahl an physischen Qubits mit steigender Problemgröße mit einer äußerst schnellen Rate steigt) und muss für jede Brettgröße neu berechnet werden. Das 4-Damen-Problem braucht 16 logische Qubits, das 5-Damen-Problem 25, das 6-Damen-Problem 36 und so weiter."
                    },
                    "sectiontitle-1": {
                        "title": "Ein einzigartiges Muster"
                    },
                    "paragraph-3": {
                        "text": "Da die Darstellung in dieser Form eher unübersichtlich ist, sollte man sie immer in eine Hamilton-Matrix umwandeln. Hamiltonians, die, wie in der einführenden Lektion erklärt, lediglich die Koeffizienten der jeweiligen Felder und Felderpaare enthalten, sind wesentlich kompakter und ermöglichen einen Fokus auf diese einzig wichtigen Informationen. Somit kann man sie auch als charakteristischen **Fingerabdruck** entsprechender Optimierungsprobleme betrachten. Hier ist die Hamilton-Matrix des eben gelösten 4-Damen-Problems:"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/nqueens_hamiltonian.png",
                        "caption": "Koeffizienten der N-Damen-Gleichung ergeben als Hamilton-Matrix ein charakteristisches Muster",
                        "alttext": "Quadratische Zahlenmatrix mit sechzehn mal sechzehn Einträgen, dessen unteres Dreieck mit Nullen und oberes Dreieck mit zwei und minus zwei gefüllt sind."
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/nqueens_hamiltonian_visualization.png",
                        "caption": "Dies kann man auch visuell darstellen; je heller die Farbe eines Kästchens, desto höher die Zahl",
                        "alttext": "Graues Quadrad mit blauen und gelben Kästchen, die ein Muster mit durchgezogenen diagonalen Linien bilden."
                    },
                    "paragraph-4": {
                        "text": "Was als Nächstes passiert, lässt sich im Coding-Tab des Homescreens selbst umsetzen: Die **Übermittlung des Hamiltonians** an den DWave-Quantenannealer. Dies geschieht im Hintergrund mittels des Ocean SDKs, welches eine Kommunikationsschnittstelle zwischen dem Endnutzer und den Servern von DWave bietet. Beim Absenden wird automatisch das Embedding generiert und mindestens ein paar Hundert Messungen durchgeführt, um den Zufallsfaktor der quantenphysikalischen Zustandsübergänge soweit wie möglich auszugleichen. Die dabei verbrauchte Rechenzeit wird vom eigenen Konto in DWave Leap abgezogen. Eine Anleitung dazu gibt es auf unserer Website."
                    }
                }
            },
            "lesson-qhs": {
                "title": "Experimentelle Ergebnisse (und Grenzen)",
                "content": {
                    "sectiontitle-1": {
                        "title": "Wie man Annealer-Ergebnisse interpretiert"
                    },
                    "paragraph-1": {
                        "text": "Die Antwort des Quantenannealers ist da! Schauen wir uns also an, wie wir die Datenpakete interpretieren können. Wenn Hamiltonians an den Annealer geschickt werden, sehen die Ergebnisse in etwa so aus:"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/nqueens_results.png",
                        "caption": "Mit diesen Zahlenreihen \"antwortet\" der Quantenannealer auf ein Rechenproblem",
                        "alttext": "Tabelle mit Zeilen, die jeweils 16 binäre Zahlen beinhalten; zweite Spalte ist beschriftet mit Energie, die sich zwischen minus acht und minus sechs bewegt, dritte Spalte mit Häufigkeit, wobei die Zahl in der ersten Zeile mit Abstand am höchsten ist."
                    },
                    "paragraph-2": {
                        "text": "Die Tabelle zeigt einen Ausschnitt aus den Messergebnissen, sortiert von der geringsten bis zur höchsten Energie — was bedeutet, dass eine Lösung desto \"besser\" ist, je **weiter oben** sie in der Tabelle steht. Jede Zeile beinhaltet den Antwortvektor sowie rechts die Häufigkeit, wie oft diese jeweils gemessen wurden. Zu diesem Zeitpunkt ist das noch Zahlensalat; um zu verstehen, ob sich der Aufwand gelohnt hat, müssen die Ergebnisse erst im Kontext **interpretiert** werden."
                    },
                    "paragraph-3": {
                        "text": "Nehmen wir die oberste Lösung als Beispiel: Die Einträge der Antwortmatrix kommen in der Reihenfolge zurück, wie wir sie in der ursprünglichen QUBO-Gleichung berücksichtigt haben. Also schreiben wir die Werte von oben nach unten und von links nach rechts wieder in die Felder des ursprünglichen Gitters (in diesem Fall, des Schachbretts) und ersetzen jede 1 mit einer Dame. Idealerweise sollten das beim 4-Damen-Problem vier Stück sein, sonst stimmt etwas mit dem QUBO-Problem nicht."
                    },
                    "equation-1": {
                        "tex": "\\vec{q}_A=\\begin{bmatrix}0&10&0&0&0&0&1&1&0&0&0&0&0&1&0\\end{bmatrix}",
                        "alttext": "qₐ=[0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0]"
                    },
                    "equation-2": {
                        "tex": "\\Rightarrow\\begin{bmatrix}0&1&0&0\\\\0&0&0&1\\\\1&0&0&0\\\\0&0&1&0\\end{bmatrix}",
                        "alttext": "⇒[[0,1,0,0],[0,0,0,1],[1,0,0,0],[0,0,1,0]]"
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/four_queens_problem.png",
                        "caption": "So sieht die obige Lösung des 4-Damen-Problems auf dem Schachbrett aus",
                        "alttext": "Schachbrett der Größe vier mal vier aus der Vogelperspektive mit vier Damenfiguren auf B1, D2, A3 und C4."
                    },
                    "sectiontitle-2": {
                        "title": "Wie groß ist die Leistung?"
                    },
                    "paragraph-4": {
                        "text": "Der erste wichtige Schritt ist getan. Für diesen Kurs wollen wir aber etwas weitergehen und erforschen, wo die **Grenzen** des Quantencomputings liegen. Wenn es darum geht, die Leistung von Quantenalgorithmen zu evaluieren, stellt dies oft eine Herausforderung dar, da diese Methode von Natur aus **nicht deterministisch** ist. Das bedeutet, dass aufgrund der Arbeit mit Quantenzuständen immer ein gewisser Anteil an Zufälligkeit im Spiel ist. Im ersten Experiment werden daher jeweils 2000 Messungen für das 4-Damen-Problem bis zum 8-Damen-Problem gemacht und verglichen, wie viele der Lösungen korrekt waren und wie viele nicht. Zum Vergleich wird der Versuch auch auf dem DWave 2000Q, dem Vorgängermodell der aktuellen Generation, wiederholt."
                    },
                    "interactive-1": {
                        
                    },
                    "interactive-2": {

                    },
                    "paragraph-5": {
                        "text": "Beim Scrollen durch die Diagramme wird der Leistungsabfall mit jeder neu hinzugekommenen Dame gut sichtbar. Während die Quantenannealer beim 4-Damen-Problem bei fast der Hälfte ihrer Messungen richtig liegen, sind bei größeren Schachbrettern nur noch eine aus 2000 Lösungen korrekt. Beim DWave Advantage liegt diese Leistungsgrenze bei 8 Damen, beim 2000Q-Modell (der generell öfter danebenliegt als sein Nachfolger) bei 7 Damen."
                    },
                    "paragraph-6": {
                        "text": "Das gleiche Optimierungsproblem wurde auch auf einem herkömmlichen Computer mit dem weit verbreiteten Algorithmus Simulated Annealing (\"simuliertes Abkühlen\") gelöst. Wie das funktioniert, ist nicht relevant und sprengt den Rahmen des Kurses, hier aber eine visuelle Darstellung, wie lange die beiden Arten von Computern jeweils gebraucht haben:"
                    },
                    "image-3": {
                        "asset": "assets/images/lessons/runtime_comparison.png",
                        "caption": "Die Volumen der Würfel repräsentieren die Zeit, die die beiden Computerarten für das N-Damen-Problem gebraucht haben",
                        "alttext": "Drei kleine Würfel, die gleich groß sind und mit N gleich 4, N gleich 6 und N gleich 8 beschriftet sind, darunter 3 große Würfel, die immer größer werden mit der gleichen Beschriftung."
                    },
                    "paragraph-7": {
                        "text": "Diese Experimente zeigen sofort den Nachteil von traditionellen Berechnungsmethoden: Die für die Optimierung benötigte Zeit ist sehr lang, hier größtenteils über 10 Minuten und, das schwerwiegendste, **steigen mit größeren Problemen an**. Der Quantenannealer hingegen sind in der Lage, die gleichen Aufgaben in Bruchteilen einer Sekunde zu lösen, und das **unabhängig von der Problemgröße**."
                    },
                    "paragraph-8": {
                        "text": "Obwohl die unschlagbare Geschwindigkeit des quantenbasierten Ansatzes ihn sehr attraktiv macht, hat er leistungstechnisch große Einschränkungen. Eine allgemeine Faustregel besagt, dass je nach Embedding und dadurch eingesetzten Kopplungen zur Umsetzung von $$n$$ logischen Qubits ungefähr $$n^2$$ physikalische Qubits gebraucht werden. Der Advantage besitzt 5627 Qubits; da aus jedem N-Damen-Problem ein Hamiltonian der Größe N² wird, berechnet sich die theoretische Höchstleistung auf **8 Damen**."
                    },
                    "equation-3": {
                        "tex": "\\sqrt[4]{5627}\\approx8.66",
                        "alttext": "4√5627≈8.66"
                    }
                }
            },
            "lesson-rdx": {
                "title": "Möglichkeiten zur Optimierung",
                "content": {
                    "paragraph-1": {
                        "text": "Können wir unser Vorgehen verbessern? Und wie! Je nach Optimierungsproblem ist es so oft möglich, die theoretischen Kapazitätslimits des Quantenannealers zu überschreiten und zusätzliche Problemgrößen, die sonst nicht möglich gewesen wären, herauszukitzeln."
                    },
                    "sectiontitle-1": {
                        "title": "Eine Dame geht noch"
                    },
                    "paragraph-2": {
                        "text": "Eine Möglichkeit zur Lösung des sonst zu schweren 9-Damen-Problems ist zum Beispiel, die Lösungsmenge zu verkleinern. Man könnte eine Dame in einer Ecke vorgeben, in der Darstellung links oben, die die Stellung weiterer Damen in der äußersten Zeile sowie Spalte **ausschließt**, um das Feld, welches dem Annealer zur Verarbeitung gegeben wird, auf 8×8 zu verkleinern und somit effektiv das 8-Damen-Problem lösen zu lassen. Erkennst du aber, was zusätzlich beachtet werden muss?"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/nine_queens.png",
                        "caption": "Ein Trick zum Lösen des 9-Damen-Problems: Die geschickte Positionierung der ersten Figur",
                        "alttext": "Schachbrett der Größe neun mal neun aus der Vogelperspektive mit einer Damenfigur in der rechten oberen Ecke, dessen Zeile, Spalte und Diagonale blau schattiert sind; das restliche acht mal acht große Feld ist mit acht Damen in gültiger Aufstellung belegt, keine steht auf den schattierten Feldern."
                    },
                    "paragraph-3": {
                        "text": "Das hier vorliegende 8-Damen-Problem braucht eine Zusatzregel, die besagt, dass die Diagonale, welche im Wirkungsbereich der Eck-Dame liegt, frei bleiben muss, da sie schon belegt ist. Mathematisch ausgedrückt bedeutet das, dass auf dieser Diagonale **genau 0 Felder** besetzt sein sollen. Um das umzusetzen, passen wir einfach die QUBO-Gleichung der Diagonale an, je nach dem, um welche es sich handelt:"
                    },
                    "equation-1": {
                        "tex": "f\\left(a,f,k,p\\right)=\\left(a+f+k+p-\\frac{1}{2}\\right)^2\\Rightarrow\\left(a,f,k,p\\right)=\\left(a+f+k+p\\right)^2",
                        "alttext": "f(a,f,k,p)=(a+f+k+p-½)²⇒f(a,f,k,p)=(a+f+k+p)²"
                    },
                    "paragraph-4": {
                        "text": "Das wäre eine entsprechende Anpassung im Falle des 4-Damen-Problems. Da in der neuen Form die Werte aller Felder einfach addiert werden, entstehen nur dann die geringsten Kosten, wenn alle 0, also unbelegt sind. Tauschen wir diesen Teil des QUBO-Problems aus und senden die entsprechend geänderte 64×64 große Hamilton-Matrix an den Quantenannealer, finden sich tatsächlich einige korrekte Lösungen!"
                    },
                    "interactive-1": {

                    },
                    "paragraph-5": {
                        "text": "Versuche also, über den Tellerrand zu blicken und durch geschickte Vorgaben den Job des Quantencomputers einfacher zu machen!"
                    }
                }
            },
            "lesson-nAh": {
                "title": "Bonus: Eine andere Perspektive auf die Kostenfunktion",
                "content": {
                    "paragraph-1": {
                        "text": "Diese Bonuslektion dient dazu, besser zu verstehen, welche Mathematik eigentlich hinter QUBO steckt und was Quantenannealer wirklich minimieren möchten. Außer in seiner Form als QUBO-Gleichung spielt das Optimierungsproblem als Hamilton-Matrix in der folgenden Operation eine Rolle:"
                    },
                    "equation-1": {
                        "tex": "\\min C\\left(q\\right)=\\min_{q_i=0,1}\\left(\\sum_{i=1}^{N}a_iq_i+\\sum_{i<j}^{N}b_{ij}q_iq_j\\right)=\\min\\left(\\vec{q}^T\\times H\\times\\vec{q}\\right)",
                        "alttext": "min C(q)=min[qᵢ=0,1](Σ[N,i=1](aᵢqᵢ)+Σ[N,i<j](bᵢⱼqᵢqⱼ))=min(qᵗ×H×q)"
                    },
                    "paragraph-2": {
                        "text": "Das sieht komplizierter aus, als es ist und sagt nur, dass wir die Kosten C minimieren wollen, die aus zwei Summen bestehen: Den Produkten jedes Koeffizienten $$a_i$$ mit seinem jeweiligen Gitterfeld $$q_i$$ und den anderen Koeffizienten $$b_{ij}$$ mit einem beliebigen Paar von zwei Feldern $$q_i$$ und $$q_j$$. Alternativ können wir die Operation als eine Matrixmultiplikation betrachten, wobei der Hamiltonian von rechts mit dem Antwortvektor und von links mit dem transponierten (d.h. horizontal ausgelegten) Antwortvektor multipliziert wird."
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/TODO.png",
                        "caption": "TODO",
                        "alttext": "TODO"
                    }
                }
            }
        }
    },
    "lection-chj": {
        "title": "Das Traveling-Salesman-Problem",
        "description": "Immer die richtige Route finden — geht das auch mit Quantencomputern als Navi? Das erfährst du in dieser Lektion!",
        "content": {
            "lesson-wgr": {
                "title": "Einführung zum Traveling-Salesman-Problem",
                "content": {
                    "paragraph-1": {
                        "text": "Stell dir vor, du bist der Vertreter eines großen Unternehmens, welches dich auf eine Geschäftsreise durch seine wichtigsten Standorte schickt. Zufälligerweise befinden sich diese in acht Hauptstädten, die über ganz Europa verteilt sind. Deine Firma will natürlich so viel Zeit wie möglich sparen. Wenn du von Berlin aus startest, jede Stadt genau einmal besuchst und anschließend nach Berlin zurückkehrst, in welcher Reihenfolge solltest du die Städte besuchen, um die Reise **so kurz wie möglich** zu halten?"
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/TODO.png",
                        "caption": "TODO",
                        "alttext": "TODO"
                    },
                    "paragraph-2": {
                        "text": "Das ist die Frage, mit der sich das **Traveling-Salesman-Problem** (zu Deutsch: \"Problem des Handelsreisenden\", Abkürzung: TSP) beschäftigt. Oder, allgemeiner ausgedrückt: Wie lautet die kürzeste mögliche Route, die jede Stadt genau einmal besucht und zur Ausgangsstadt zurückführt, wenn eine Liste von Städten und die Entfernungen zwischen jedem Städtepaar gegeben ist? Als praktisches Alltagsproblem schon seit dem 17. Jahrhundert immer wieder erwähnt, wurde es erstmals um 1930 vom österreichischen Mathematiker Karl Weber als mathematisches Optimierungsproblem formuliert und ausgearbeitet. Es ist in zahlreichen realen Anwendungen zu finden, z.B. bei der Planung von Lieferketten, der Renovierung von Pipelines oder der Strukturanalyse von Kristallen."
                    },
                    "sectiontitle-1": {
                        "title": "Die Herausforderung"
                    },
                    "paragraph-3": {
                        "text": "Aber warum Optimierungsproblem? Bei solch einfachen Aufgaben wie der vorherigen ist die Lösung natürlich schnell ersichtlich: Nimmt man die Entfernungen als Luftlinien an, so wäre der kürzeste Weg derjenige, der außen herumführt."
                    },
                    "image-2": {
                        "asset": "assets/images/lessons/TODO.png",
                        "caption": "TODO",
                        "alttext": "TODO"
                    },
                    "paragraph-4": {
                        "text": "Wenn man jedoch 20, 50 oder gar 100 Städte besuchen muss, ist die Sache gar nicht mehr so einfach. Das liegt daran, dass es mit jeder neuen Stadt ein Vielfaches an neuen Möglichkeiten für eine Rundreise gibt, als bereits vorhandene Ortschaften, wodurch die Zahl der zu prüfenden Optionen rasant steigt. In unserem Beispiel mit 8 Städten haben wir 2520 Möglichkeiten zur Auswahl, aber mit 12 Städten gibt es bereits 19.958.400 verschiedene Wege (dies lässt sich durch eine Formel berechnen). Daher ist das Problem **NP-schwer**, was im Grunde bedeutet, dass ein Algorithmus, der die exakte Lösung für große Eingaben in endlicher Zeit findet, wahrscheinlich unmöglich ist."
                    },
                    "equation-1": {
                        "tex": "S\\left(n\\right)=\\frac{\\left(n-1\\right)!}{2}",
                        "alttext": "S(n)=(n-1)!/2"
                    },
                    "paragraph-5": {
                        "text": "Können wir also die Fähigkeiten der Qubits nutzen, um Touren in wenigen Millisekunden zu finden — und bis zu welcher Kartengröße?"
                    }
                }
            },
            "lesson-CWC": {
                "title": "Was ist Graphentheorie?",
                "content": {
                    "sectiontitle-1": {
                        "title": "Verbindungen mathematisch darstellen"
                    },
                    "paragraph-1": {
                        "text": "Computer können nur mit Zahlen arbeiten, also müssen wir auch mit ihnen umgehen. Die vorherige Einheit hat mit den Städten, die durch Linien untereinander verbunden sind, bereits ein Schlüsselkonzept der Lösungsmethode eingeführt: **Graphen** sind ein grundlegender Bestandteil der Mathematik, und zwar so sehr, dass sie ein eigenes Fachgebiet namens **Graphentheorie** besitzen. Im Allgemeinen beschreibt ein Graph eine Menge von Städten, **Knoten** genannt, und wie sie mathematisch miteinander verbunden sind."
                    },
                    "paragraph-2": {
                        "text": "Vereinfachen wir unser Beispiel von vorhin auf nur 4 Städte mit dem Namen A, B, C und D."
                    },
                    "image-1": {
                        "asset": "assets/images/lessons/graph_example.png",
                        "caption": "Ein simpler Graph mit 4 Knoten sowie ihren Abständen zueinander",
                        "alttext": "Vier bunte Kreise beschriftet mit A, B, C und D, durch graue Linien mit jeweils einer Zahl daneben verbunden."
                    }
                }
            }
        }
    }
}
